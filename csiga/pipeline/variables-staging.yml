#
# Terraform
#

# Amazon access to use to run terraform. Usually admin account to be able to create Amazon services.

#. aws_access_key (required): ((aws.access_key))
#+ Amazon AWS access key for Terraform. See value format [here](https://docs.cycloid.io/advanced-guide/integrate-and-use-cycloid-credentials-manager.html#vault-in-the-pipeline)
aws_access_key: ((aws.access_key))

#. aws_secret_key (required): ((aws.secret_key))
#+ Amazon AWS secret key for Terraform. See value format [here](https://docs.cycloid.io/advanced-guide/integrate-and-use-cycloid-credentials-manager.html#vault-in-the-pipeline)
aws_secret_key: ((aws.secret_key))

#. aws_default_region (required): eu-west-1
#+ Amazon AWS region to use for Terraform.
aws_default_region: eu-west-1

#. terraform_storage_bucket_name (required): seraf-terraform-remote-state
#+ AWS S3 bucket name to store terraform remote state file.
terraform_storage_bucket_name: seraf-terraform-remote-state


#
# Repos
#

#. config_git_repository (required): git@github.com:MyUser/config-eks.git
#+ Git repository URL containing the config of the stack.
config_git_repository: git@github.com:MyUser/config-eks.git

#. config_git_branch (required): master
#+ Branch of the config Git repository.
config_git_branch: master

#. config_git_private_key (required): ((ssh_config.ssh_key))
#+ SSH key pair to fetch the config Git repository.
config_git_private_key: ((ssh_config.ssh_key))


#
# Default variables that shouldn't be changed except if needed
#

#. env (required): staging
#+ Name of the project's environment.
env: staging

#. project (required): csiga
#+ Name of the project.
project: csiga

#. customer (required): seraf
#+ Name of the Cycloid Organization, used as customer variable name.
customer: seraf

#. stack_git_branch (required): master
#+ Branch to use on the public stack Git repository
stack_git_branch: master

#. config_terraform_path (required): csiga/terraform/staging
#+ Path of Terraform files in the config git repository
config_terraform_path: csiga/terraform/staging

#. terraform_version (required): '0.12.9'
#+ terraform version used to execute your code.
terraform_version: '0.12.9'
